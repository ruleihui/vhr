<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.SalaryDao">

    <resultMap id="BaseResultMap" type="com.example.entity.Salary">
        <!--@Table salary-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="basicSalary" column="basicSalary" jdbcType="INTEGER"/>
        <result property="bonus" column="bonus" jdbcType="INTEGER"/>
        <result property="lunchSalary" column="lunchSalary" jdbcType="INTEGER"/>
        <result property="trafficSalary" column="trafficSalary" jdbcType="INTEGER"/>
        <result property="allSalary" column="allSalary" jdbcType="INTEGER"/>
        <result property="pensionBase" column="pensionBase" jdbcType="INTEGER"/>
        <result property="pensionPer" column="pensionPer" jdbcType="OTHER"/>
        <result property="createDate" column="createDate" jdbcType="TIMESTAMP"/>
        <result property="medicalBase" column="medicalBase" jdbcType="INTEGER"/>
        <result property="medicalPer" column="medicalPer" jdbcType="OTHER"/>
        <result property="accumulationFundBase" column="accumulationFundBase" jdbcType="INTEGER"/>
        <result property="accumulationFundPer" column="accumulationFundPer" jdbcType="OTHER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select id,
               basicSalary,
               bonus,
               lunchSalary,
               trafficSalary,
               allSalary,
               pensionBase,
               pensionPer,
               createDate,
               medicalBase,
               medicalPer,
               accumulationFundBase,
               accumulationFundPer,
               name
        from vhr.salary
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select id,
               basicSalary,
               bonus,
               lunchSalary,
               trafficSalary,
               allSalary,
               pensionBase,
               pensionPer,
               createDate,
               medicalBase,
               medicalPer,
               accumulationFundBase,
               accumulationFundPer,
               name
        from vhr.salary limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        id, basicSalary, bonus, lunchSalary, trafficSalary, allSalary, pensionBase, pensionPer, createDate, medicalBase,
        medicalPer, accumulationFundBase, accumulationFundPer, name
        from vhr.salary
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="basicSalary != null">
                and basicSalary = #{basicSalary}
            </if>
            <if test="bonus != null">
                and bonus = #{bonus}
            </if>
            <if test="lunchSalary != null">
                and lunchSalary = #{lunchSalary}
            </if>
            <if test="trafficSalary != null">
                and trafficSalary = #{trafficSalary}
            </if>
            <if test="allSalary != null">
                and allSalary = #{allSalary}
            </if>
            <if test="pensionBase != null">
                and pensionBase = #{pensionBase}
            </if>
            <if test="pensionPer != null">
                and pensionPer = #{pensionPer}
            </if>
            <if test="createDate != null">
                and createDate = #{createDate}
            </if>
            <if test="medicalBase != null">
                and medicalBase = #{medicalBase}
            </if>
            <if test="medicalPer != null">
                and medicalPer = #{medicalPer}
            </if>
            <if test="accumulationFundBase != null">
                and accumulationFundBase = #{accumulationFundBase}
            </if>
            <if test="accumulationFundPer != null">
                and accumulationFundPer = #{accumulationFundPer}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into vhr.salary(basicSalary, bonus, lunchSalary, trafficSalary, allSalary, pensionBase, pensionPer,
                               createDate, medicalBase, medicalPer, accumulationFundBase, accumulationFundPer, name)
        values (#{basicSalary}, #{bonus}, #{lunchSalary}, #{trafficSalary}, #{allSalary}, #{pensionBase}, #{pensionPer},
                #{createDate}, #{medicalBase}, #{medicalPer}, #{accumulationFundBase}, #{accumulationFundPer}, #{name})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update vhr.salary
        <set>
            <if test="basicSalary != null">
                basicSalary = #{basicSalary},
            </if>
            <if test="bonus != null">
                bonus = #{bonus},
            </if>
            <if test="lunchSalary != null">
                lunchSalary = #{lunchSalary},
            </if>
            <if test="trafficSalary != null">
                trafficSalary = #{trafficSalary},
            </if>
            <if test="allSalary != null">
                allSalary = #{allSalary},
            </if>
            <if test="pensionBase != null">
                pensionBase = #{pensionBase},
            </if>
            <if test="pensionPer != null">
                pensionPer = #{pensionPer},
            </if>
            <if test="createDate != null">
                createDate = #{createDate},
            </if>
            <if test="medicalBase != null">
                medicalBase = #{medicalBase},
            </if>
            <if test="medicalPer != null">
                medicalPer = #{medicalPer},
            </if>
            <if test="accumulationFundBase != null">
                accumulationFundBase = #{accumulationFundBase},
            </if>
            <if test="accumulationFundPer != null">
                accumulationFundPer = #{accumulationFundPer},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from vhr.salary
        where id = #{id}
    </delete>
    <!--通过主键删除多个-->
    <delete id="deleteMulti">
        delete from vhr.salary where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>